# This is a basic pipeline to help you get started with C/C++test Professional integration to analyze a Make-based project.

stages:
  - build         
  - test

build-make:
  stage: build
  script:
    # Builds your Make project using 'cpptesttrace' to collect input data for code analysis.
    # Be sure 'cpptesttrace' is available on $PATH.
    - echo "Building project..."
    - cpptesttrace make clean all
  artifacts: 
    # Archives cpptestscan.bdf so that it can be used in the 'test' stage.
    paths: 
      - cpptestscan.bdf

# Runs code analysis with C/C++test.
cpptest-sast:
  stage: test
  script:
    # Configures project.
    - echo "Configuring project options..."    
    - echo "bdf.import.compiler.family=gcc_9-64" > project.properties
    - echo "bdf.import.location=." >> project.properties
    # Configures advanced reporting options and SCM integration.
    - echo "Configuring reporting options..."    
    - echo "report.format=sast-gitlab" > report.properties
    - echo "report.scontrol=min" >> report.properties
    - echo "scontrol.rep.type=git" >> report.properties
    - echo "scontrol.rep.git.url=$CI_PROJECT_URL" >> report.properties
    - echo "scontrol.rep.git.workspace=$CI_PROJECT_DIR" >> report.properties
    # When running on Windows, be sure to escape backslashes:
    # - echo "scontrol.rep.git.workspace=$CI_PROJECT_DIR".Replace("\", "\\") >> report.properties
    - echo "scontrol.rep.git.branch=$CI_COMMIT_BRANCH" >> report.properties
    # Launches C/C++test.
    - echo "Running C/C++test..."
    - cpptestcli -config "builtin://Recommended Rules" -data $CI_BUILDS_DIR/cpptest-workspace-$CI_PIPELINE_ID -bdf cpptestscan.bdf -report reports -localsettings project.properties -localsettings report.properties
  after_script:
    # Removes the workspace folder.
    - rm -rf $CI_BUILDS_DIR/cpptest-workspace-$CI_PIPELINE_ID
  artifacts:
    # Uploads analysis results in the GitLab SAST format, so that they are displayed in GitLab.
    reports:
      sast: reports/report.sast
    # Uploads all report files (.xml, .sast) as build artifacts.
    paths:
      - reports/*
